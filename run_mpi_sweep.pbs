#!/bin/bash
#PBS -q standard
#PBS -l nodes=8:ppn=16
#PBS -l walltime=200:00:00
#PBS -e ${PBS_JOBID}.err
#PBS -o ${PBS_JOBID}.out
export OMP_NUM_THREADS=16

cd "$PBS_O_WORKDIR"

module load intel/2019
module load openmpi/4.0.5-intel
module load fftw3/intel/3.3.8-openmpi4

# Configuration
BIN="imre3d-ms-ddiX-rot-mpi-qf-grad-muend-self-K3"
BIN_ARGS="-Nad-Vx-cylcut-sigma-IGRANJE -i input"
INPUT_FILE="input"   # Adjust if your input path/file differs

# Backup and restore input on exit
BACKUP_FILE="$INPUT_FILE.bak.$(date +%s)"
if [[ -f "$INPUT_FILE" ]]; then
  cp -- "$INPUT_FILE" "$BACKUP_FILE"
fi
restore_input() {
  if [[ -f "$BACKUP_FILE" ]]; then
    mv -f -- "$BACKUP_FILE" "$INPUT_FILE"
  fi
}
trap restore_input EXIT

# Sweep N from 184 to 384 in steps of 8
for N in $(seq 184 8 384); do
  echo "=== Running N=$N (NX=NY=NZ) ==="

  # Update NX/NY/NZ in the input while preserving indentation/formatting
  if [[ -f "$INPUT_FILE" ]]; then
    sed -E -i "s/^(\t*|[[:space:]]*)NX = .*/\1NX = ${N}/" "$INPUT_FILE"
    sed -E -i "s/^(\t*|[[:space:]]*)NY = .*/\1NY = ${N}/" "$INPUT_FILE"
    sed -E -i "s/^(\t*|[[:space:]]*)NZ = .*/\1NZ = ${N}/" "$INPUT_FILE"
  else
    echo "Warning: input file '$INPUT_FILE' not found; skipping NX/NY/NZ edit." 1>&2
  fi

  # Run across 8 nodes, 1 rank per node, no binding (as provided)
  mpirun --mca pml ucx --np 8 --map-by ppr:1:node --bind-to none "$BIN" $BIN_ARGS

  # Copy outputs if present
  DEST_DIR="N${N}"
  mkdir -p -- "$DEST_DIR"
  [[ -f imag3d-rms.txt ]] && cp -f -- imag3d-rms.txt "$DEST_DIR/"
  [[ -f imag3d-mu.txt  ]] && cp -f -- imag3d-mu.txt  "$DEST_DIR/"
done

echo "Sweep complete. Input restored."

