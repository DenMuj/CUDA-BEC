#  Type of rescaling of Gross-Pitaevskii equation.
#  Possible values: 1 or 2.
#  Required: yes
#  Type: int
   OPTION = 2

#  Number of atoms in condensate.
#  Required: yes
#  Type: long
   NATOMS = 1500

#  Quantum fluctuation factor. 
#  If 0, no quantum fluctuation is considered.
#  If 1, quantum fluctuation is considered.
#  Required: yes
#  Type: int
   QF = 1
   
#  Initial values for the wave function (for a Gaussian).
#  Required: yes in order to calculate discretization parameters DX, DY and DZ
#  Type: double
   SX = 0.3
   SY = 0.3
   SZ = 2.0

#  Relative chemical potential for the end of the simulation.
#  Required: yes
#  Type: double
   MUREL = 1.000000e-10

#  Absolute chemical potential for the end of the simulation.
#  Required: yes
#  Type: double
   MUEND = 10.0

#  Dipolar potential cut off.
#  Required: no, will be calculated from grid size
#  Type: double
   #CUTOFF = 13.

#  Unit of length in m (defined by a chosen referent frequency omega_ref).
#  Required: yes
#  Type: double
   AHO = 5.55238e-7

#  Contact interaction strength in units of Bohr radius.
#  Required: yes
#  Type: double
   AS = 70.

#  Dipole-dipole interaction strength in units of Bohr radius. 
#  Required: yes
#  Type: double
   ADD = 132.607

#  Number of discretization points in the x-direction.
#  Required: yes
#  Type: long
   NX = 128

#  Number of discretization points in the y-direction.
#  Required: yes
#  Type: long
   NY = 128

#  Number of discretization points in the z-direction.
#  Required: yes
#  Type: long
   NZ = 128

#  Multiplicative factor for spatial discretization (MX, MY, MZ) and time discretization (MT)
#  Formula is DX = SX * MX * 2 / NX (same for DY and DZ)and DT = DY * DY / MT
#  Required: no (default is 10)
#  Type: double 
   MX = 10
   MY = 10
   MZ = 10
   MT = 2

#  Spatial discretization step in the x-direction.
#  Required: no (if commented, will be calculated from MX, NX and SX)
#  Type: double
#  DX = 0.5

#  Spatial discretization step in the y-direction.
#  Required: no (if commented, will be calculated from MY, NY and SY)
#  Type: double
#  DY = 0.5

#  Spatial discretization step in the z-direction.
#  Required: no (if commented, will be calculated from MZ, NZ and SZ)
#  Type: double
#  DZ = 0.5

#  Time discretization step DT.
#  Required: no (if commented, will be calculated from MT and DY)
#  Type: double
#  DT = 0.1

#  Gamma coefficient of anisotropy of the trap.
#  Required: yes
#  Type: double
   GAMMA = 0.

#  Nu coefficient of anisotropy of the trap (omega_y / omega_x).
#  Required: yes
#  Type: double
   NU = 0.

#  Lambda coefficient of anisotropy of the trap (omega_z / omega_x).
#  Required: yes
#  Type: double
   LAMBDA = 0.

#  Number of iterations 
#  Required: yes
#  Type: long
   NITER = 100

#  Number of snapshots made during NITER iterations. Every NITER/NSNAP iterations
#  the program will calculate RMS, chemical potential, energy and (optionally)
#  density profiles and write them to specified output files.
   NSNAP = 10

#  Output file with the summary of final values of all physical quantities. If
#  not defined, will not be written.
#  Required: no
#  Type: string
   MUOUTPUT = imag3d-mu

#  Output file with RMS values. The values are written in each snapshot.
#  If not defined, will not be written.
#  Required: no
#  Type: string
   RMSOUT = imag3d-rms

#  Output file with the wave function obtained from integrated density profiles.
#  If not defined, density profiles will not be written.
#  Required: no
#  Type: string
   NITEROUT = imag3d-den-niter

#  Output file with the final wave function obtained at program end that can
#  subsequently be used as an input wave function. If not defined, the wave
#  function will not be saved.
#  Required: no
#  Type: string
   FINALPSI = imag3d-finalpsi

#  Value that controls what density profiles will be written in output files.
#  List of output functions:
#  1D integrated density X (format "X,DEN") = 1
#  1D integrated density Y (format "Y,DEN") = 2
#  1D integrated density Z (format "Z,DEN") = 4
#  2D integrated density XY (format "X,Y,DEN") = 8
#  2D integrated density XZ (format "X,Z,DEN") = 16
#  2D integrated density YZ (format "Y,Z,DEN") = 32
#  2D cross-section density XY0 (format "X,Y,DEN") = 64
#  2D cross-section density X0Z (format "X,Z,DEN") = 128
#  2D cross-section density 0YZ (format "Y,Z,DEN") = 256
#  OUTFLAGS is provided as a sum of desired density profiles, e.g.,
#  OUTFLAGS = 56 implies that XY, XZ, YZ integrated densities will be
#  written (8 + 16 + 32), while other density profiles will be ommited.
#  Required if wave function output file (NITEROUT)
#  is defined.
#  Required: conditionally
#  Type: int
   OUTFLAGS = 56
